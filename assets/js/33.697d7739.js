(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{451:function(a,t,s){"use strict";s.r(t);var l=s(2),e=Object(l.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"calc-含义及用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#calc-含义及用法"}},[a._v("#")]),a._v(" calc 含义及用法")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("含义：用于动态计算长度值。")]),a._v(" "),t("p",[t("strong",[a._v("用法：")])]),a._v(" "),t("ul",[t("li",[a._v("需要注意的是，运算符前后都需要保留一个空格，例如：width: calc(100% - 10px)；")]),a._v(" "),t("li",[a._v("任何长度值都可以使用calc()函数进行计算；")]),a._v(" "),t("li",[a._v('calc()函数支持 "+", "-", "*", "/" 运算；')]),a._v(" "),t("li",[a._v("calc()函数使用标准的数学运算优先级规则；")])]),a._v(" "),t("h3",{attrs:{id:"support-含义及用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#support-含义及用法"}},[a._v("#")]),a._v(" @support 含义及用法")]),a._v(" "),t("hr"),a._v(" "),t("p",[t("strong",[a._v("含义：")])]),a._v(" "),t("p",[a._v("主要是用于检测浏览器是否支持CSS的某个属性，其实就是条件判断，如果支持某个属性，你可以写一套样式，如果不支持某个属性，你也可以提供另外一套样式作为替补。")]),a._v(" "),t("p",[t("strong",[a._v("注意：")]),a._v("\n这里有一点需要注意的是：@support对于浏览器的版本也是有要求的，不是说所有的浏览器以及其所有的版本都是支持@support的。__")]),a._v(" "),t("p",[t("strong",[a._v("用法：")])]),a._v(" "),t("ol",[t("li",[a._v("基本语法,如果浏览器支持display:flex属性的话，那么div的样式就是display:flex")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@support(prop:value){\n/*自己的样式*/\n}\n@supports (display: flex) { display:flex }\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v("逻辑操作符：“not” 的用法,如果浏览器不支持display:flex属性的话，那么div的样式就是display:right")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@supports not (display: flex) { display:right }\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[a._v("逻辑操作符：“and”的用法,如果浏览器支持display:flex和box-shadow的属性，就执行里面自己的样式")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@supports (display: flex) and ( box-shadow: 2px 2px 2px black ) {\n\t/*自己的样式*/\n}\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[a._v("逻辑操作符：“or” 的用法,如果浏览器支持其中一个就可以执行里面自己的样式")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@supports (display: -webkit-flex) or (display: -moz-flex) or(display: flex) {\n      /*自己的样式 */\n}\n")])])]),t("p",[a._v("以上逻辑操作符可以混用，必要可以用括号括起来")]),a._v(" "),t("h3",{attrs:{id:"media-含义及用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#media-含义及用法"}},[a._v("#")]),a._v(" @media 含义及用法")]),a._v(" "),t("hr"),a._v(" "),t("p",[t("strong",[a._v("含义：")]),a._v("\n使用 @media 查询，你可以针对不同的媒体类型定义不同的样式。@media 可以针对不同的屏幕尺寸设置不同的样式，特别是如果你需要设置设计响应式的页面，@media 是非常有用的。当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。")]),a._v(" "),t("p",[t("strong",[a._v("用法：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@media not|only mediatype and (mediafeature and|or|not mediafeature) {\n  CSS-Code;\n}\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);